version: 2
jobs:
  build:
    docker:
      - image: circleci/node
    working_directory: ~/react
    steps:
      - checkout
      - run:
          name: install yarn update
          command: sudo npm install yarn -g
      - run:
          name: install dependencies
          command: |
            yarn install
  test:
    docker:
      - image: circleci/node
    working_directory: ~/react
    steps:
      - checkout
      - run:
          name: install yarn update
          command:  sudo npm install yarn -g
      - run:
          name: install dependencies
          command: yarn install
      - run:
          name: run tests
          command: sudo yarn test
  deploy_production:
    docker:
      - image: google/cloud-sdk
        auth:
        #Put the contents of keyfile.json into an environment variable for the build called GCR_CREDS, which is then passed in.
        username: _json_key
        password: $PACKER_AUTH 
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Install Docker client
          command: |
            set -x
            VER="17.03.0-ce"
            curl -L -o /tmp/docker-$VER.tgz https://download.docker.com/linux/static/stable/x86_64/docker-$VER.tgz
            tar -xz -C /tmp -f /tmp/docker-$VER.tgz
            mv /tmp/docker/* /usr/bin
      - checkout
      - run:
          name: bake a docker image
          command: |
            echo "create a docker image for cloud"
            docker build --no-cache -t grc.io/${PROJECT_ID}/react-app:$CIRCLE_SHA1 .
      - run:
          name: push image to gcp
          command: |
            echo "authenticating gcloud to use circle ci"
            # apt-get update && apt-get --only-upgrade install kubectl google-cloud-sdk google-cloud-sdk-datastore-emulator google-cloud-sdk-pubsub-emulator google-cloud-sdk-app-engine-go google-cloud-sdk-app-engine-java google-cloud-sdk-app-engine-python google-cloud-sdk-cbt google-cloud-sdk-bigtable-emulator google-cloud-sdk-datalab
            # Authenticate CircleCI with the service account file
            # Save the string to a text file key
            echo ${PACKER_AUTH} > key.txt
            # Decode the Service Account
            base64 -i key.txt -d > ${HOME}/gcloud-service-key.json
            gcloud auth activate-service-account ${PACKER_ID} --key-file ${HOME}/gcloud-service-key.json
            gcloud  config set project ${PROJECT_ID}
            #define our default compute zone
            gcloud config set compute/zone ${CLOUDSDK_COMPUTE_ZONE} 
            #create a cluster
            #set the default default cluster for our project
            gcloud config set container/cluster example-cluster
            #authenticate the cluster
            gcloud container clusters get-credentials $CLUSTER_NAME
            echo "we're pushing here"
            gcloud docker -- push grc.io/${PROJECT_ID}/react-app:$CIRCLE_SHA1 
            #chmod +x deploycontainer.sh
            #bash ./deploycontainer.sh

workflows:
  version: 2
  build_and_test_approval_deploy:
    jobs:
      - build
      - test:
          requires:
            - build
      - deploy_staging:
          type: approval
          requires:
            - test
          filters:
            branches:
              only: develop
      - deploy_production:
          filters:
            branches:
              only: master

